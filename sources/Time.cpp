#include <pch.hpp>
#include <Time.hpp>


///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// *structors
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
::rts::Time::Time(
    Time::Type time
)
    : m_time{ time }
{}

///////////////////////////////////////////////////////////////////////////
::rts::Time::~Time() = default;



///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Get
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
::rts::Time::operator Time::Type() const
{
    return m_time;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::get() const
    -> Time::Type
{
    return m_time;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::getAsSeconds() const
    -> Time::Type
{
    return m_time / 1000;
}



///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Modification
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::operator+=(const Time& rhs)
    -> Time&
{
    m_time += rhs.m_time;
    return *this;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::operator+=(const Time::Type& rhs)
    -> Time&
{
    m_time += rhs;
    return *this;
}
