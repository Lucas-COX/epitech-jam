#include <pch.hpp>
#include <Time.hpp>


///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// *structors
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
::rts::Time::Time(
    Time::Type time
)
    : m_time{ time }
{}

///////////////////////////////////////////////////////////////////////////
::rts::Time::~Time() = default;


///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Get
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
::rts::Time::operator Type()
{
    return m_time;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::get() const
    -> Time::Type
{
    return m_time;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::getAsSeconds() const
    -> Time::Type
{
    return m_time / 1000;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::getAsMilliseconds() const
    -> Time::Type
{
    return m_time;
}



///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Modificartions
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::operator+=(
    const ::rts::Time& rhs
) -> ::rts::Time&
{
    m_time += rhs.m_time;
    return *this;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::operator+=(
    const Time::Type& rhs
) -> Time&
{
    m_time += m_time;
    return *this;
}

///////////////////////////////////////////////////////////////////////////
void ::rts::Time::set(
    const ::rts::Time& time
)
{
    m_time = time.m_time;
}

///////////////////////////////////////////////////////////////////////////
void ::rts::Time::set(
    const Time::Type& time
)
{
    m_time = m_time;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::operator+(
    const ::rts::Time& rhs
) const
    -> ::rts::Time
{
    return m_time + rhs.m_time;
}

///////////////////////////////////////////////////////////////////////////
auto ::rts::Time::operator+(
    const Time::Type& rhs
) const
    -> Time
{
    return m_time + rhs;
}
