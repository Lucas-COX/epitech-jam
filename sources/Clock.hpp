#pragma once

#include <Time.hpp>



namespace rts {



class Clock {

public:

    using Type = ::rts::Time;



public:

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // *structors
    //
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Constructor
    ///
    ///////////////////////////////////////////////////////////////////////////
    Clock();

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Destructor
    ///
    ///////////////////////////////////////////////////////////////////////////
    ~Clock();



    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Actions
    //
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Get the elapsed time since the last restart
    ///
    ///////////////////////////////////////////////////////////////////////////
    [[ nodiscard ]] auto getElapsed()
        -> Clock::Type;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Get the elapsed time since the last restart, then restarts the
    /// clock
    ///
    ///////////////////////////////////////////////////////////////////////////
    [[ nodiscard ]] auto getRestart()
        -> Clock::Type;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Restarts the clock
    ///
    ///////////////////////////////////////////////////////////////////////////
    void restart();



private:

    ::std::chrono::time_point<::std::chrono::high_resolution_clock> m_lastCallTime;

};



} // namespace rts
