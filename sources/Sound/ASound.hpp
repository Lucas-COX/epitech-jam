#pragma once

#include <string>
#include <memory>
#include <SFML/Audio.hpp>

namespace rts::sound {

class ASound {
    public:
        ///////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////
        // *structors
        //
        ///////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////

        ///////////////////////////////////////////////////////////////////////////
        /// \brief Constructor
        ///
        ///////////////////////////////////////////////////////////////////////////
        explicit ASound(::std::unique_ptr<::sf::SoundSource> source);

        ///////////////////////////////////////////////////////////////////////////
        /// \brief Destructor
        ///
        ///////////////////////////////////////////////////////////////////////////
        virtual ~ASound() {};

        ///////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////
        // Basics
        //
        ///////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////

        ///////////////////////////////////////////////////////////////////////////
        /// \brief Plays the sound
        ///
        ///////////////////////////////////////////////////////////////////////////
        virtual void play() const = 0;

        ///////////////////////////////////////////////////////////////////////////
        /// \brief stops the sound
        ///
        ///////////////////////////////////////////////////////////////////////////
        void stop() const;

        ///////////////////////////////////////////////////////////////////////////
        /// \brief pauses the sound
        ///
        ///////////////////////////////////////////////////////////////////////////
        void pause() const;

        ///////////////////////////////////////////////////////////////////////////
        /// \brief sets the sound position
        ///
        ///////////////////////////////////////////////////////////////////////////
        void setPosition(
            float x,
            float y,
            float z = -1);

        ///////////////////////////////////////////////////////////////////////////
        /// \brief sets the sound volume
        ///
        ///////////////////////////////////////////////////////////////////////////
        void setVolume(float vol);

        ///////////////////////////////////////////////////////////////////////////
        /// \brief Gets the position.
        ///
        ///////////////////////////////////////////////////////////////////////////
        [[nodiscard]] auto getSource() const
            -> const ::std::unique_ptr<sf::SoundSource>&;

    protected:
        bool s_isPlaying;
        float s_x;
        float s_y;
        float s_z;
        ::std::unique_ptr<::sf::SoundSource> s_source;
};
}